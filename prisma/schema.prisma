// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Flight {
  id_flight           Int       @id @unique @default(autoincrement())
  number              String    @unique
  airport_departure   Airport   @relation(name: "departure", fields: [id_departure], references: [id_airport])
  airport_destination Airport   @relation(name: "destination", fields: [id_destination], references: [id_airport])
  Aircraft            Aircraft? @relation(fields: [id_aircraft], references: [id_aircraft])
  id_aircraft         Int?
  id_departure        Int
  id_destination      Int
  duration            Float
  distance            Float
  date_departure      DateTime
  date_arrival        DateTime
  price               Float
  bookings            Booking[]
}

model Airport {
  id_airport        Int      @id @unique @default(autoincrement())
  country           Country  @relation(fields: [id_country], references: [id_country])
  city              City     @relation(fields: [id_city], references: [id_city])
  id_country        Int
  id_city           Int
  name              String
  code              String
  geo_lat           Float
  geo_long          Float
  Flights_departure Flight[] @relation(name: "departure")
  Flights_arrival   Flight[] @relation(name: "destination")
}

model Aircraft {
  id_aircraft  Int      @id @unique @default(autoincrement())
  model        String
  registration String
  manufacturer String
  capacity     Int
  avg_speed    Int
  Flights      Flight[]
}

model Country {
  id_country Int       @id @default(autoincrement())
  code       String?
  name       String    @unique
  Airports   Airport[]
  Cities     City[]

  @@unique([id_country, name])
}

model City {
  id_city    Int       @id @unique @default(autoincrement())
  country    Country   @relation(fields: [id_country], references: [id_country])
  id_country Int
  name       String    @unique
  Airports   Airport[]
}

model Booking {
  id_booking       Int      @id @default(autoincrement())
  customer         Customer @relation(fields: [id_customer], references: [id_customer])
  flight           Flight   @relation(fields: [id_flight], references: [id_flight])
  date_booking     DateTime
  id_customer      Int
  id_flight        Int
  number_of_people Int
  seats            String
  price            Float
}

model Customer {
  id_customer           Int       @id @default(autoincrement())
  email                 String
  name                  String
  lastname              String
  identification_number String    @unique(map: "identification_number")
  Bookings              Booking[]
}

model Employee {
  id_employee Int          @id @default(autoincrement())
  login       String       @unique
  password    String
  role        EmployeeRole
}

enum EmployeeRole {
  USER
  ADMIN
}
